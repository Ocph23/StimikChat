@page "/chat/{Id:int}"

@using StimikChat.Data
@using StimikChat.Models;
@using Microsoft.AspNetCore.SignalR.Client;
@using System.Collections;

@inject AccountService accountService;
@inject ChatService chatService;

<h1>Chat With @chatService.CurrentRoom.FirstName</h1>
<div class="mainRoom">
    <EditForm Model="@model">

        <div class="chatBody">
            <ul>
                @foreach (var item in chatService.CurrentRoom.Conversations)
                {
                <li>
                    @if (item.SenderId == chatService.CurrentRoom.UserId)
                    {
                        <div class="recieve">
                            <h5 class="userName">@chatService.CurrentRoom.FirstName</h5>
                            <h5>@item.Message</h5>
                            <h6>@item.Created <span>Dibaca: @item.Readed</span></h6>
                        </div>
                    }
                    else
                    {
                        <div class="sender">
                            <h5 class="userName">@chatService.CurrentRoom.myAccount.NamaUser</h5>
                            <h5>@item.Message</h5>
                            <h6>@item.Created <span>Dibaca: @item.Readed</span></h6>
                        </div>
                    }


                </li>
                }
            </ul>
            <InputTextArea @bind-Value="model.Message"></InputTextArea>
            <button type="button" @onclick="Send">Send</button>
        </div>
    </EditForm>
</div>



@code{

    [Parameter]
    public int Id { get; set; }


    ChatModel model = new ChatModel();

    protected override void OnInitialized()
    {
        chatService.SetCurrentRoom(Id);
        chatService.OnRefresh += StateHasChanged;
        this.StateHasChanged();

    }


    async void Send()
    {
        try
        {
            if (chatService.CurrentRoom!=null)
                chatService.CurrentRoom.SendMessage(model.Message);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        model.Message = "";
        await Task.Delay(1000);

    }

}




<style>

    .mainRoom{
        width:100%;
    }
    .sender{
        margin:30px;
        text-align:left;
    }

    .recieve{
        
        margin:30px;
        text-align:right;
    }
</style>